plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}

apply from: "$rootDir/dependencies.gradle"
apply from: "$rootDir/config.gradle"

android {
    defaultConfig {
        compileSdkVersion config.compileSdk
        minSdkVersion config.minSdk
        targetSdkVersion config.targetSdk
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions "dim"
    productFlavors {
        'native' {
            versionNameSuffix "-native"
            dimension = "dim"
        }

        react {
            versionNameSuffix "-react"
            dimension = "dim"
        }
    }
}

dependencies {
    implementation "androidx.annotation:annotation:1.3.0"

    nativeImplementation(deps['facebook-flipper'])
    reactImplementation(deps['facebook-flipper']) {
        exclude group: 'com.facebook.fbjni'
    }

    nativeImplementation(deps['flipper-network-plugin'])
    reactImplementation(deps['flipper-network-plugin']) {
        exclude group: 'com.facebook.flipper'
    }

    implementation deps['flipper-mmkv-plugin']

    compileOnly deps['okhttp']

    nativeImplementation deps['soloader']
    reactCompileOnly deps['soloader']
}

afterEvaluate {
    publishing {
        publications {
            reactRelease(MavenPublication) {
                groupId = 'io.github.tadevi'
                artifactId = 'flipper-util-react'
                version = flipperUtilVersion

                from components.reactRelease
            }

            nativeRelease(MavenPublication) {
                groupId = 'io.github.tadevi'
                artifactId = 'flipper-util-native'
                version = flipperUtilVersion

                from components.nativeRelease
            }
        }

        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())

        repositories {
            maven {
                name = "Snapshot"
                url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                credentials {
                    username properties.getProperty('username')
                    password properties.getProperty('password')
                }
            }

//            maven {
//                name = "Releases"
//                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
//                credentials {
//                    username properties.getProperty('username')
//                    password properties.getProperty('password')
//                }
//            }
        }
    }
}
